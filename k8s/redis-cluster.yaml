
# Redis Cluster for High Availability
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster-config
  namespace: lexos
  labels:
    app: redis-cluster
data:
  redis.conf: |
    # Redis Cluster Configuration
    port 6379
    cluster-enabled yes
    cluster-config-file nodes.conf
    cluster-node-timeout 5000
    cluster-announce-ip ${POD_IP}
    cluster-announce-port 6379
    cluster-announce-bus-port 16379
    
    # Security
    requirepass ${REDIS_PASSWORD}
    masterauth ${REDIS_PASSWORD}
    
    # Memory and Performance
    maxmemory 2gb
    maxmemory-policy allkeys-lru
    save 900 1
    save 300 10
    save 60 10000
    
    # Logging
    loglevel notice
    logfile /var/log/redis/redis.log
    
    # Network
    tcp-keepalive 300
    timeout 0
    tcp-backlog 511
    
    # Persistence
    appendonly yes
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
  namespace: lexos
  labels:
    app: redis-cluster
spec:
  serviceName: redis-cluster-headless
  replicas: 6  # 3 masters + 3 replicas
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      
      initContainers:
      - name: config-init
        image: redis:7-alpine
        command: ['sh', '-c']
        args:
        - |
          cp /tmp/redis/redis.conf /etc/redis/redis.conf
          echo "cluster-announce-ip ${POD_IP}" >> /etc/redis/redis.conf
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: lexos-secrets
              key: REDIS_PASSWORD
        volumeMounts:
        - name: redis-config
          mountPath: /tmp/redis
        - name: redis-config-writable
          mountPath: /etc/redis
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: ["ALL"]
      
      containers:
      - name: redis
        image: redis:7-alpine
        command: ["redis-server"]
        args: ["/etc/redis/redis.conf"]
        
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop: ["ALL"]
        
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "1"
        
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: lexos-secrets
              key: REDIS_PASSWORD
        
        ports:
        - name: redis
          containerPort: 6379
          protocol: TCP
        - name: cluster-bus
          containerPort: 16379
          protocol: TCP
        
        livenessProbe:
          exec:
            command:
            - redis-cli
            - --no-auth-warning
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        
        readinessProbe:
          exec:
            command:
            - redis-cli
            - --no-auth-warning
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config-writable
          mountPath: /etc/redis
        - name: redis-logs
          mountPath: /var/log/redis
      
      # Redis Exporter for Prometheus
      - name: redis-exporter
        image: oliver006/redis_exporter:v1.55.0
        
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: ["ALL"]
        
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        
        env:
        - name: REDIS_ADDR
          value: "redis://localhost:6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: lexos-secrets
              key: REDIS_PASSWORD
        
        ports:
        - name: metrics
          containerPort: 9121
          protocol: TCP
      
      volumes:
      - name: redis-config
        configMap:
          name: redis-cluster-config
      - name: redis-config-writable
        emptyDir: {}
      - name: redis-logs
        emptyDir: {}
      
      terminationGracePeriodSeconds: 30
  
  volumeClaimTemplates:
  - metadata:
      name: redis-data
      labels:
        app: redis-cluster
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: fast-ssd-retain
      resources:
        requests:
          storage: 50Gi

---
# Headless Service for StatefulSet
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster-headless
  namespace: lexos
  labels:
    app: redis-cluster
spec:
  type: ClusterIP
  clusterIP: None
  ports:
  - name: redis
    port: 6379
    targetPort: redis
    protocol: TCP
  - name: cluster-bus
    port: 16379
    targetPort: cluster-bus
    protocol: TCP
  selector:
    app: redis-cluster

---
# Service for Redis Cluster
apiVersion: v1
kind: Service
metadata:
  name: redis-cluster
  namespace: lexos
  labels:
    app: redis-cluster
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"
    prometheus.io/path: "/metrics"
spec:
  type: ClusterIP
  ports:
  - name: redis
    port: 6379
    targetPort: redis
    protocol: TCP
  - name: metrics
    port: 9121
    targetPort: metrics
    protocol: TCP
  selector:
    app: redis-cluster

---
# Job to Initialize Redis Cluster
apiVersion: batch/v1
kind: Job
metadata:
  name: redis-cluster-init
  namespace: lexos
  labels:
    app: redis-cluster
    component: init
spec:
  template:
    metadata:
      labels:
        app: redis-cluster-init
    spec:
      restartPolicy: OnFailure
      
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
      
      containers:
      - name: redis-cluster-init
        image: redis:7-alpine
        command: ['sh', '-c']
        args:
        - |
          echo "Waiting for Redis pods to be ready..."
          sleep 30
          
          # Get pod IPs
          REDIS_NODES=""
          for i in $(seq 0 5); do
            IP=$(nslookup redis-cluster-${i}.redis-cluster-headless.lexos.svc.cluster.local | grep Address | tail -1 | awk '{print $2}')
            REDIS_NODES="${REDIS_NODES} ${IP}:6379"
          done
          
          echo "Creating Redis cluster with nodes: ${REDIS_NODES}"
          
          # Create cluster
          redis-cli --cluster create ${REDIS_NODES} \
            --cluster-replicas 1 \
            --cluster-yes \
            -a ${REDIS_PASSWORD}
          
          echo "Redis cluster initialized successfully"
        
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: lexos-secrets
              key: REDIS_PASSWORD
        
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: ["ALL"]
  
  backoffLimit: 3
  activeDeadlineSeconds: 600
