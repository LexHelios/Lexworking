# LEX Production Nginx Configuration
# ðŸ”± JAI MAHAKAAL! Production-ready with security hardening

upstream lex_backend {
    # Backend server pool
    server 127.0.0.1:8000;
    
    # Add more servers for load balancing in future
    # server 127.0.0.1:8001 backup;
    # server 127.0.0.1:8002 backup;
    
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;
limit_req_zone $binary_remote_addr zone=general:10m rate=300r/m;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=perip:10m;

server {
    listen 80;
    server_name lexcommand.ai www.lexcommand.ai;
    
    # Redirect HTTP to HTTPS
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    server_name lexcommand.ai www.lexcommand.ai;
    
    # ========== SSL CONFIGURATION ==========
    ssl_certificate /etc/letsencrypt/live/lexcommand.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lexcommand.ai/privkey.pem;
    
    # Modern SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_ecdh_curve secp384r1;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    
    # OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    ssl_trusted_certificate /etc/letsencrypt/live/lexcommand.ai/chain.pem;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    
    # ========== SECURITY HEADERS ==========
    # HSTS (HTTP Strict Transport Security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    
    # Content Security Policy
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.openrouter.ai; frame-ancestors 'none';" always;
    
    # Other security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Remove server signature
    server_tokens off;
    add_header X-Server "LEX Production" always;
    
    # ========== RATE LIMITING & DOS PROTECTION ==========
    # Connection limits
    limit_conn perip 20;
    
    # Request rate limits
    limit_req zone=general burst=50 nodelay;
    
    # ========== LOGGING ==========
    access_log /var/log/nginx/lex_access.log combined;
    error_log /var/log/nginx/lex_error.log warn;
    
    # Custom log format for security monitoring
    log_format security '$remote_addr - $remote_user [$time_local] '
                       '"$request" $status $bytes_sent '
                       '"$http_referer" "$http_user_agent" '
                       '$request_time $upstream_response_time';
    access_log /var/log/nginx/lex_security.log security;
    
    # ========== GZIP COMPRESSION ==========
    gzip on;
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/x-javascript
        application/javascript
        application/xml+rss
        application/json
        application/xml
        image/svg+xml;
    gzip_disable "MSIE [1-6]\.";
    
    # ========== CACHING ==========
    # Static assets caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Cache-Status "STATIC";
        
        # Security headers for static files
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
    }
    
    # ========== API ENDPOINTS ==========
    # Main LEX API with rate limiting
    location /api/ {
        # Strict rate limiting for API
        limit_req zone=api burst=10 nodelay;
        
        # Remove trailing slash
        rewrite ^/api/(.*)$ /$1 break;
        
        # Proxy settings
        proxy_pass http://lex_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        
        # Timeouts
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        # Cache API responses (for health check only)
        location /api/health {
            proxy_cache_valid 200 30s;
            add_header X-Cache-Status $upstream_cache_status;
        }
    }
    
    # Health check endpoint (less restrictive)
    location /health {
        limit_req zone=general burst=20 nodelay;
        
        proxy_pass http://lex_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Quick timeout for health checks
        proxy_connect_timeout 5s;
        proxy_send_timeout 5s;
        proxy_read_timeout 5s;
    }
    
    # WebSocket support (for streaming)
    location /ws {
        limit_req zone=api burst=5 nodelay;
        
        proxy_pass http://lex_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket specific timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        
        # Disable buffering for real-time communication
        proxy_buffering off;
    }
    
    # ========== FRONTEND SERVING ==========
    # Main frontend interface
    location / {
        limit_req zone=general burst=30 nodelay;
        
        # Try static files first, then proxy to backend
        try_files $uri $uri/ @backend;
        
        # Serve from frontend directory if exists
        root /root/Lexworking/frontend;
        index index.html;
        
        # Security headers for HTML content
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
    }
    
    # Backend fallback for dynamic routes
    location @backend {
        proxy_pass http://lex_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }
    
    # ========== SECURITY LOCATIONS ==========
    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block access to backup and config files
    location ~* \.(bak|backup|sql|conf|ini|log|old|orig|original|php~|php#|php.save|ht|htaccess|htpasswd)$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block common exploit attempts
    location ~* (eval\(|base64_decode|system\(|exec\(|python|wget|curl) {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # ========== MONITORING ENDPOINTS ==========
    # Nginx status (internal only)
    location /nginx_status {
        allow 127.0.0.1;
        deny all;
        stub_status on;
        access_log off;
    }
    
    # Custom error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /root/Lexworking/frontend;
        internal;
    }
    
    location = /50x.html {
        root /root/Lexworking/frontend;
        internal;
    }
}

# Additional server block for www redirect
server {
    listen 443 ssl http2;
    server_name www.lexcommand.ai;
    
    ssl_certificate /etc/letsencrypt/live/lexcommand.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/lexcommand.ai/privkey.pem;
    
    return 301 https://lexcommand.ai$request_uri;
}